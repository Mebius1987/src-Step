package Step;

/**
 * Created by Mebius on 02.02.2016.
 */
public class Shkurenko_8_1 {
    public static void main(String[] args) {
        task11();
    }

    /*
    ВНИМАНИЕ !!!

            В этих задачах нельзя использовать арифметические операции (+, -, *, /, %) и метод Math.pow(). Также могут быть и другие ограничения в каких-то конкретных задачах. Рекомендуются к использованию побитовые операторы &, |, ~, ^, <<, >>, >>>. Удачи 

            /////////////////////////////////////////////////////////////////////////////////////////
            */
    public static void task1() {
    /*

        1. Дано число n, значение которого меньше 32. Покажите число 2n, то есть число, у которого энный бит равен 1, а все остальные – по нулям.
*/

    }
/*
        2. Даны два неравных числа: n и m, не превосходящие 31. Вычислите 2n + 2m (да, здесь можно использовать операцию + ).

        3. Дано целое число A и натуральное число n. Обнулите у числа A его последние n бит, и выведите результат на экран консоли.

        4. Дано целое число A и натуральное число n. Выведите число, которое получается из числа A установкой значения n-го бита в единицу.

        5. Дано целое число A и натуральное число n. Выведите число, которое получается из числа A инвертированием n-го бита.

        6. Дано целое число A и натуральное число n. Выведите число, которое состоит только из n последних бит числа A (то есть обнулите все биты числа A, кроме последних n).

        7. Дано целое число A и натуральное число n. Выведите значение n-го бита числа A, то есть 0 или 1.

        8. Дано целое число типа short. Выведите его в битовой форме (16 бит).

        9. Есть переменная типа int (32 бита), равная нулю. Присвоить трём случайным битам значение 1. Показать получившееся значение переменной.

        10. Сохранить в одной переменной типа int два значения типа short. Затем вытащить из переменной каждое из двух значений по отдельности.
*/
}